patch-package
--- a/node_modules/rn-host-detect/index.js
+++ b/node_modules/rn-host-detect/index.js
@@ -1,53 +1,28 @@
 'use strict'
-
+var NativeModules = require('react-native').NativeModules
 /*
- * It only for Debug Remotely mode for Android
- * When __DEV__ === false, we can't use window.require('NativeModules')
+ * Get React Native server IP if hostname is `localhost`
+ * On Android emulator, the IP of host is `10.0.2.2` (Genymotion: 10.0.3.2)
  */
-function getByRemoteConfig(hostname) {
-  var remoteModuleConfig = typeof window !== 'undefined' &&
-    window.__fbBatchedBridgeConfig &&
-    window.__fbBatchedBridgeConfig.remoteModuleConfig
+module.exports = function (hostname) {
   if (
-    !Array.isArray(remoteModuleConfig) ||
+    typeof __fbBatchedBridge !== 'object' ||  // Not on react-native
     hostname !== 'localhost' && hostname !== '127.0.0.1'
-  ) return { hostname: hostname, passed: false }
-
-  var constants = (
-    remoteModuleConfig.find(getConstants) || []
-  )[1]
-  if (constants) {
-    var serverHost = constants.ServerHost || hostname
-    return { hostname: serverHost.split(':')[0], passed: true }
+  ) {
+    return hostname
   }
-  return { hostname: hostname, passed: false }
-}
 
-function getConstants(config) {
-  return config && (config[0] === 'AndroidConstants' || config[0] === 'PlatformConstants')
-}
-
-function getByRNRequirePolyfill(hostname) {
   var originalWarn = console.warn
-  console.warn = function() {
+  console.warn = function () {
     if (arguments[0] && arguments[0].indexOf('Requiring module \'NativeModules\' by name') > -1) return
     return originalWarn.apply(console, arguments)
   }
-
-  var NativeModules
   var PlatformConstants
   var AndroidConstants
-  if (
-    typeof window === 'undefined' ||
-    !window.__DEV__ ||
-    typeof window.require !== 'function' ||
-    // RN >= 0.56
-    // TODO: Get NativeModules for RN >= 0.56
-    typeof window.require.name === 'metroRequire'
-  ) {
+  if (typeof window === 'undefined' || typeof window.require !== 'function') {
     return hostname
   }
-  NativeModules = window.require('NativeModules')
+
   console.warn = originalWarn
   if (
     !NativeModules ||
@@ -56,6 +31,7 @@ function getByRNRequirePolyfill(hostname) {
     return hostname
   }
   PlatformConstants = NativeModules.PlatformConstants
+
   AndroidConstants = NativeModules.AndroidConstants
 
   var serverHost = (PlatformConstants ?
@@ -64,26 +40,3 @@ function getByRNRequirePolyfill(hostname) {
   ) || hostname
   return serverHost.split(':')[0]
 }
-
-/*
- * Get React Native server IP if hostname is `localhost`
- * On Android emulator, the IP of host is `10.0.2.2` (Genymotion: 10.0.3.2)
- */
-module.exports = function (hostname) {
-  // Check if it in React Native environment
-  if (
-    typeof __fbBatchedBridge !== 'object' ||
-    hostname !== 'localhost' && hostname !== '127.0.0.1'
-  ) {
-    return hostname
-  }
-  var result = getByRemoteConfig(hostname)
-
-  // Leave if get hostname by remote config successful
-  if (result.passed) {
-    return result.hostname
-  }
-
-  // Otherwise, use RN's require polyfill
-  return getByRNRequirePolyfill(hostname)
-}
